# load packages
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
library(ReproReports) # custom reporting functions
# Prepare report object. This will be updated automatically by the reproCheck function each time values are compared
reportObject <- data.frame(dummyRow = TRUE, reportedValue = NA, obtainedValue = NA, valueType = NA, percentageError = NA, comparisonOutcome = NA, eyeballCheck = NA)
install.packages("foreign")
?haven
??haven
data <- read_sav("GroupC_2-10-2014/data/Study1_Data.sav")
View(data)
head(data)
colnames(data)
data <- data %>%
filter(!is.na(Order))
?select
data <- read_sav("data/Study1_Data.sav")
setwd("~/Documents/GitHub/reproducibility_assignment")
data <- read_sav("GroupC_2-10-2014/data/Study1_Data.sav")
data <- read_sav("GroupC_2-10-2014/data/Study1_Data.sav")
setwd("~/Documents/GitHub/reproducibility_assignment")
data <- read_sav("GroupC_2-10-2014/data/Study1_Data.sav")
setwd("~/Documents/GitHub/reproducibility_assignment")
d <- data %>%
filter(!is.na(Order)) # remove NA cases
View(d)
d.curiosity <- d %>%
select(Order, starts_with("T1"), -T1_Curious)
View(d.curiosity)
d.curiosity <- d %>%
select(Order, starts_with("T1"), -T1_Curious)   %>%
select(Order, contains("Curious"))
d.curiosity <- d %>%
select(Order, starts_with("T1"), -T1_Curious)   %>%
select(Order, contains("Curious")) %>%
gather(measure, values, 2:10)
d.interest <- d %>%
select(Order, starts_with("T1"), -T1_Interesting)   %>%
select(Order, contains("Interesting")) %>%
gather(measure, values, 2:10)
d.surprise<- d %>%
select(Order, starts_with("T1"), -T1_Surprised)   %>%
select(Order, contains("Surprised")) %>%
gather(measure, values, 2:10)
d.meaningful <- d %>%
select(Order, starts_with("T1"), -T1_Meaningful)   %>%
select(Order, contains("Meaningful")) %>%
gather(measure, values, 2:10)
View(d.meaningful)
data %>% mean(T1_Curious)
?is.na
?mean
data %>% mean(T1_Curious, na.rm = TRUE)
data %>% mean(T1_Curious, na.rm = TRUE)
summary(data)
mean(data$T1_Curious, na.rm = TRUE)
colnames(data)
mean(data$T1_Interest_Composite, na.rm = TRUE)
mean(data$T1_Surprised, na.rm = TRUE)
mean(data$T1_Meaningful, na.rm = TRUE)
mean(data$T1_Interesting, na.rm = TRUE)
mean(data$T1_Curious, na.rm = TRUE)
mean(data$T1_Interest_Composite, na.rm = TRUE)
mean(data$T1_Surprised, na.rm = TRUE)
mean(data$T1_Meaningful, na.rm = TRUE)
mean(data$T1_Interesting, na.rm = TRUE)
mean(data$T2_Curious, na.rm = TRUE)
mean(data$T2_Interest_Composite, na.rm = TRUE)
mean(data$T2_Surprised, na.rm = TRUE)
mean(data$T2_Meaningful, na.rm = TRUE)
mean(data$T2_Interesting, na.rm = TRUE)
mean(data$T2_Curious, na.rm = TRUE) - mean(data$T1_Curious, na.rm = TRUE)
mean(data$T2_Interest_Composite, na.rm = TRUE) - mean(data$T1_Interest_Composite, na.rm = TRUE)
library(tidyverse)
library(DT) # dependency
library(ggthemes) # dependency
mean(data$T2_Surprised, na.rm = TRUE) - mean(data$T1_Surprised, na.rm = TRUE)
mean(data$T2_Meaningful, na.rm = TRUE) - mean(data$T1_Meaningful, na.rm = TRUE)
mean(data$T2_Interesting, na.rm = TRUE) - mean(data$T1_Interesting, na.rm = TRUE)
d.meaningful2 <- d %>%
select(Order, starts_with("T2"), -T2_Meaningful)   %>%
select(Order, contains("Meaningful")) %>%
gather(measure, values, 2:10)
t1_mean_meaningful <- mean(meaningful2$values)
meaningful2 <- d.meaningful %>%
filter(!is.na(values))
t1_mean_meaningful <- mean(meaningful2$values)
t1_mean_meaningful
data %>%
summarize(mean_T1_curious = mean(T1_Curious))
data %>%
summarize(mean_T1_curious = mean(T1_Curious),
mean_T1_interestcomp = mean(T1_Interest_Composite),
mean_T1_surprise = mean(T1_Surprised),
mean_T1_meaningful = mean(T1_Meaningful),
mean_T1_interesting = mean(T1_Interesting))
data %>%
summarize(mean_T1_curious = mean(T1_Curious),
mean_T1_interestcomp = mean(T1_Interest_Composite),
mean_T1_surprise = mean(T1_Surprised),
mean_T1_meaningful = mean(T1_Meaningful),
mean_T1_interesting = mean(T1_Interesting),
mean_T2_curious = mean(T2_Curious),
mean_T2_interestcomp = mean(T2_Interest_Composite),
mean_T2_surprise = mean(T2_Surprised),
mean_T2_meaningful = mean(T2_Meaningful),
mean_T2_interesting = mean(T2_Interesting))
means <- data %>%
summarize(mean_T1_curious = mean(T1_Curious),
mean_T1_interestcomp = mean(T1_Interest_Composite),
mean_T1_surprise = mean(T1_Surprised),
mean_T1_meaningful = mean(T1_Meaningful),
mean_T1_interesting = mean(T1_Interesting),
mean_T2_curious = mean(T2_Curious),
mean_T2_interestcomp = mean(T2_Interest_Composite),
mean_T2_surprise = mean(T2_Surprised),
mean_T2_meaningful = mean(T2_Meaningful),
mean_T2_interesting = mean(T2_Interesting))
View(means)
means <- means %>%
gather(measure, T1, T2, 1:10)
means <- means %>%
gather(measure, T1, 1:10)
articleID <- 2-10-2014 # insert the article ID code here e.g., "10-3-2015"
reportType <- pilot # specify whether this is the 'pilot' report or 'copilot' report
data <- data %>%
filter(!is.na(Order)) #removed those who didn't return for T2 - matches 106 participants reported after exclusion
data <- data %>%
filter(!is.na(Order)) #removed those who didn't return for T2 - matches 106 participants reported after exclusion
articleID <- 2-10-2014 # insert the article ID code here e.g., "10-3-2015"
reportType <- pilot # specify whether this is the 'pilot' report or 'copilot' report
# load packages
library(tidyverse) # for data munging
library(knitr) # for kable table formating
library(haven) # import and export 'SPSS', 'Stata' and 'SAS' Files
library(readxl) # import excel files
library(ReproReports) # custom reporting functions
library(lsr) # calculating cohen's d
library(rcompanion) #calculating confidence intervals
# Prepare report object. This will be updated automatically by the reproCheck function each time values are compared
reportObject <- data.frame(dummyRow = TRUE, reportedValue = NA, obtainedValue = NA, valueType = NA, percentageError = NA, comparisonOutcome = NA, eyeballCheck = NA)
data <- read_sav("GroupC_2-10-2014/data/Study1_Data.sav")
head(data)
colnames(data)
View(data) #135 rows matches 135 participants reported before exclusions
data <- data %>%
filter(!is.na(Order)) #removed those who didn't return for T2 - matches 106 participants reported after exclusion
#"Table 1 provides descriptive statistics for each measure for Study 1."
#T1 Means/Standard deviations (for Curiosity & Interest Composite only)
#Curiosity T1 mean = 3.99 [3.74, 4.24], SD = 1.32
T1.curious <- groupwiseMean(T1_Curious ~ 1,
data   = data,
conf   = 0.95,
digits = 3)
T1sd.curious <- sd(data$T1_Curious, na.rm = TRUE)
#Interest Composite T1 mean = 3.54 [3.34, 3.73], SD = 1.01
T1.interestcomp <- groupwiseMean(T1_Interest_Composite ~ 1,
data   = data,
conf   = 0.95,
digits = 3)
T1sd.interestcomp <- sd(data$T1_Interest_Composite, na.rm = TRUE)
#Surprise T1 mean = 2.84 [2.64, 3.05]
T1.surprise <- groupwiseMean(T1_Surprised ~ 1,
data   = data,
conf   = 0.95,
digits = 3)
#Meaningfulness T1 mean = 3.81 [3.60, 4.03]
T1.meaningful <- groupwiseMean(T1_Meaningful ~ 1,
data   = data,
conf   = 0.95,
digits = 3)
#Interesting T1 mean = 3.95 [3.73, 4.18]
T1.interest <- groupwiseMean(T1_Interesting ~ 1,
data   = data,
conf   = 0.95,
digits = 3)
#T2 Means/Standard deviations (for Curiosity & Interest Composite only)
#Curiosity T2 mean = 4.34 [4.10, 4.58], SD = 1.25
T2.curious <- groupwiseMean(T2_Curious ~ 1,
data   = data,
conf   = 0.95,
digits = 3)
T2sd.curious <- sd(data$T2_Curious, na.rm = TRUE)
#Interest Composite T2 mean = 3.82 [3.65, 4.00], SD = 0.89
T2.interestcomp <- groupwiseMean(T2_Interest_Composite ~ 1,
data   = data,
conf   = 0.95,
digits = 3)
T2sd.interestcomp <- sd(data$T2_Interest_Composite, na.rm = TRUE)
#Surprise T2 mean = 3.25 [3.06, 3.44]
T2.surprise <- groupwiseMean(T2_Surprised ~ 1,
data   = data,
conf   = 0.95,
digits = 3)
#Meaningfulness T2 mean = 4.04 [3.84, 4.23]
T2.meaningful <- groupwiseMean(T2_Meaningful ~ 1,
data   = data,
conf   = 0.95,
digits = 3)
#Interesting T2 mean = 4.19 [4.00, 4.38]
T2.interest <- groupwiseMean(T2_Interesting ~ 1,
data   = data,
conf   = 0.95,
digits = 3)
#Underestimates
#Curiosity underestimate = 0.35
dif.curious <- mean(data$T2_Curious, na.rm = TRUE) - mean(data$T1_Curious, na.rm = TRUE)
#Interest Composite underestimate = 0.29
dif.interestcomp <- mean(data$T2_Interest_Composite, na.rm = TRUE) - mean(data$T1_Interest_Composite, na.rm = TRUE)
#Surprise underestimate = 0.40
dif.surprise <- mean(data$T2_Surprised, na.rm = TRUE) - mean(data$T1_Surprised, na.rm = TRUE)
#Meaningfulness underestimate = 0.22
dif.meaningful <- mean(data$T2_Meaningful, na.rm = TRUE) - mean(data$T1_Meaningful, na.rm = TRUE)
#Interesting underestimate = 0.23
dif.interest <- mean(data$T2_Interesting, na.rm = TRUE) - mean(data$T1_Interesting, na.rm = TRUE)
#Create vectors for columns (variable, T1 mean/CI, T2 mean/CI, Underestimate)
Measure <- c("curiosity", "interestcomp", "surpise", "meaningful", "interest")
T1Mean <- c(T1.curious$Mean, T1.interestcomp$Mean, T1.surprise$Mean, T1.meaningful$Mean, T1.interest$Mean)
T1LowerCI <- c(T1.curious$Trad.lower, T1.interestcomp$Trad.lower, T1.surprise$Trad.lower, T1.meaningful$Trad.lower, T1.interest$Trad.lower)
T1UpperCI <- c(T1.curious$Trad.upper, T1.interestcomp$Trad.upper, T1.surprise$Trad.upper, T1.meaningful$Trad.upper, T1.interest$Trad.upper)
T2Mean <- c(T2.curious$Mean, T2.interestcomp$Mean, T2.surprise$Mean, T2.meaningful$Mean, T2.interest$Mean)
T2LowerCI <- c(T2.curious$Trad.lower, T2.interestcomp$Trad.lower, T2.surprise$Trad.lower, T2.meaningful$Trad.lower, T2.interest$Trad.lower)
T2UpperCI <- c(T2.curious$Trad.upper, T2.interestcomp$Trad.upper, T2.surprise$Trad.upper, T2.meaningful$Trad.upper, T2.interest$Trad.upper)
Underestimate <- round(c(dif.curious, dif.interestcomp, dif.surprise, dif.meaningful, dif.interest), digits = 2)
T1.curious
dif.curious <- groupwiseMean(Curious_diff ~ 1,
data   = data,
conf   = 0.95,
digits = 3)
dif.curious
dif.curious <- groupwiseMean(Curious_diff ~ 1,
data   = data,
conf   = 0.95,
digits = 2)
dif.curious
dif.interestcomp <- groupwiseMean(Interest_composite_diff ~ 1,
data   = data,
conf   = 0.95,
digits = 2)
dif.interestcomp
dif.surprise <- groupwiseMean(T2_Surprised ~ T1_Surprised,
data   = data,
conf   = 0.95,
digits = 2)
dif.surprise <- groupwiseMean(T2_Surprised ~ T1_Surprised,
na.rm = TRUE,
data   = data,
conf   = 0.95,
digits = 2)
dif.surprise
data$Surprised_diff <- data$T2_Surprised - data$T1_Surprised
data$Surprised_diff
dif.surprise <- groupwiseMean(Surprised_diff ~ 1,
data   = data,
conf   = 0.95,
digits = 2)
dif.surprise
data$Meaningful_diff <- data$T2_Meaningful - data$T1_Meaningful
dif.meaningful <- groupwiseMean(Meaningful_diff ~ 1,
data   = data,
conf   = 0.95,
digits = 2)
dif.meaningful
data$Interesting_diff <- data$T2_Interesting - data$T1_Interesting
dif.interest <- groupwiseMean(Interesting_diff ~ 1,
data   = data,
conf   = 0.95,
digits = 2)
dif.interest
Measure <- c("curiosity", "interestcomp", "surpise", "meaningful", "interest")
T1Mean <- c(T1.curious$Mean, T1.interestcomp$Mean, T1.surprise$Mean, T1.meaningful$Mean, T1.interest$Mean)
T1LowerCI <- c(T1.curious$Trad.lower, T1.interestcomp$Trad.lower, T1.surprise$Trad.lower, T1.meaningful$Trad.lower, T1.interest$Trad.lower)
T1UpperCI <- c(T1.curious$Trad.upper, T1.interestcomp$Trad.upper, T1.surprise$Trad.upper, T1.meaningful$Trad.upper, T1.interest$Trad.upper)
T2Mean <- c(T2.curious$Mean, T2.interestcomp$Mean, T2.surprise$Mean, T2.meaningful$Mean, T2.interest$Mean)
T2LowerCI <- c(T2.curious$Trad.lower, T2.interestcomp$Trad.lower, T2.surprise$Trad.lower, T2.meaningful$Trad.lower, T2.interest$Trad.lower)
T2UpperCI <- c(T2.curious$Trad.upper, T2.interestcomp$Trad.upper, T2.surprise$Trad.upper, T2.meaningful$Trad.upper, T2.interest$Trad.upper)
Underestimate <- round(c(dif.curious, dif.interestcomp, dif.surprise, dif.meaningful, dif.interest), digits = 2)
Underestimate <- round(c(dif.curious$Mean, dif.interestcomp$Mean, dif.surprise$Mean, dif.meaningful$Mean, dif.interest$Mean), digits = 2)
UndLowerCI <- c(dif.curious$Trad.lower, dif.interestcomp$Trad.lower, dif.surprise$Trad.lower, dif.meaningful$Trad.lower, dif.interest$Trad.lower)
UndUpperCI <- c(dif.curious$Trad.upper, dif.interestcomp$Trad.upper, dif.surprise$Trad.upper, dif.meaningful$Trad.upper, dif.interest$Trad.upper)
table <- kable(cbind(Measure, T1Mean, T1LowerCI, T1UpperCI, T2Mean, T2LowerCI, T2UpperCI, Underestimate, UndLowerCI, UndUpperCI, p))
#"Participants’ Time 1 predictions of their curiosity (M = 3.99, SD = 1.32) were lower than their actual curiosity ratings at Time 2, immediately before reading their responses (M = 4.34, SD = 1.25), t(105) = 2.88, p = .005, d = 0.27."
#T test - Curious
t.curious <- t.test(data$T1_Curious, data$T2_Curious, paired = TRUE)
#Cohen's d = 0.28 ******* actual value 0.2797284... is this incorrect or rounding error?
cohensD(data$T1_Curious, data$T2_Curious, method = "paired")
#"Participants also underestimated how interesting they would find their responses. Predictions of interest at Time 1 (M = 3.54, SD = 1.01) were lower than ratings of actual interest experienced at Time 2 (M = 3.82, SD = 0.89), t(105) = 3.10, p = .003, d = 0.29."
#T test - Interesting Composite
t.interestcomp <- t.test(data$T1_Interest_Composite, data$T2_Interest_Composite, paired = TRUE)
#Cohen's d = 0.30 ******* off by a small bit again
cohensD(data$T1_Interest_Composite, data$T2_Interest_Composite, method = "paired")
#T test - Surprise
t.surprise <- t.test(data$T1_Surprised, data$T2_Surprised, paired = TRUE)
#T test - Meaningful
t.meaningful <- t.test(data$T1_Meaningful, data$T2_Meaningful, paired = TRUE)
#T test - Interesting
t.interest <- t.test(data$T1_Interesting, data$T2_Interesting, paired = TRUE)
#Create vector for underestimate confidence intervals & p values
p <- round(c(t.curious$p.value, t.interestcomp$p.value, t.surprise$p.value, t.meaningful$p.value, t.interest$p.value), digits = 3)
#Create table
table <- kable(cbind(Measure, T1Mean, T1LowerCI, T1UpperCI, T2Mean, T2LowerCI, T2UpperCI, Underestimate, UndLowerCI, UndUpperCI, p))
table
table
install.packages(umx)
curious.items <- c(data$T1_Roommate_Curious, data$T1_Social_Curious, data$T1_Essay_Curious, data$T1_Convo_Curious, data$T1_Song_Curious, data$T1_Finals_Curious, data$T1_Joke_Curious, data$T1_Photo_Curious, data$T1_FB_Curious)
install.pacakages(psy)
cronbach(curious.items)
install.packages("psy")
install.packages("umx")
library(psy)
cronbach(curious.items)
curious.items <- c(data$T1_Roommate_Curious, data$T1_Social_Curious, data$T1_Essay_Curious, data$T1_Convo_Curious, data$T1_Song_Curious, data$T1_Finals_Curious, data$T1_Joke_Curious, data$T1_Photo_Curious, data$T1_FB_Curious)
cronbach(curious.items)
alpha(curious.items)
library(umx)
curious_alpha <- reliability(cov(data.matrix(curious.items))) #Convert to matrix and calculate alpha
curious.items
curious_alpha <- reliability(cov(data.matrix(curious.items))) #Convert to matrix and calculate alpha
alpha(data)
alpha(data, na.rm = TRUE)
alpha(data)
cronbach.alpha(data)
data.matrix(curious.items)
reliability(cov(data.matrix(curious.items)))
curious.items <- c(data$T1_Roommate_Curious, data$T1_Social_Curious, data$T1_Essay_Curious, data$T1_Convo_Curious, data$T1_Song_Curious, data$T1_Finals_Curious, data$T1_Joke_Curious, data$T1_Photo_Curious, data$T1_FB_Curious)
curious.items
curious_alpha <- reliability(cov(data.matrix(curious.items))) #Convert to matrix and calculate alpha
colnames(data)
install.packages("corrr")
cronbach.alpha(curious.items)
install.packages("ltm")
library(ltm)
cronbach.alpha(curious.items)
cronbach.alpha(as.data.frame(curious.items))
curious.items <- c(data$T1_Roommate_Curious, data$T1_Social_Curious, data$T1_Essay_Curious, data$T1_Convo_Curious, data$T1_Song_Curious, data$T1_Finals_Curious, data$T1_Joke_Curious, data$T1_Photo_Curious, data$T1_FB_Curious)
cronbach.alpha(as.data.frame(curious.items))
curious.items
curious.items <- select(data, T1_Roommate_Curious, T1_Social_Curious, T1_Essay_Curious, T1_Convo_Curious, T1_Song_Curious, T1_Finals_Curious, T1_Joke_Curious, T1_Photo_Curious, T1_FB_Curious)
library(tidyverse) # for data munging
curious.items <- dplyr::select(data, T1_Roommate_Curious, T1_Social_Curious, T1_Essay_Curious, T1_Convo_Curious, T1_Song_Curious, T1_Finals_Curious, T1_Joke_Curious, T1_Photo_Curious, T1_FB_Curious)
cronbach.alpha(curious.items)
cronbach.alpha(curious.items, na.rm = TRUE)
curious.items <- dplyr::select(data, T1_Roommate_Curious, T1_Social_Curious, T1_Essay_Curious, T1_Convo_Curious, T1_Song_Curious, T1_Finals_Curious, T1_Joke_Curious, T1_Photo_Curious, T1_FB_Curious, T2_Roommate_Curious, T2_Social_Curious, T2_Essay_Curious, T2_Convo_Curious, T2_Song_Curious, T2_Finals_Curious, T2_Joke_Curious, T2_Photo_Curious, T2_FB_Curious)
curious.items <- dplyr::select(data, T1_Roommate_Curious, T1_Social_Curious, T1_Essay_Curious, T1_Convo_Curious, T1_Song_Curious, T1_Finals_Curious, T1_Joke_Curious, T1_Photo_Curious, T1_FB_Curious, T2_Roommate_curious, T2_Social_curious, T2_Essay_curious, T2_Convo_curious, T2_Song_curious, T2_Finals_curious, T2_Joke_curious, T2_Photo_curious, T2_FB_curious)
cronbach.alpha(curious.items, na.rm = TRUE)
interestcomp.items <- dplyr::select(data, T1_Roommate_Interest_composite, T1_Social_Interest_composite, T1_Essay_Interest_composite, T1_Convo_Interest_composite, T1_Song_Interest_composite, T1_Finals_Interest_composite, T1_Joke_Interest_composite, T1_Photo_Interest_composite, T1_FB_Interest_composite, T2_Roommate_Interest_composite, T2_Social_Interest_composite, T2_Essay_Interest_composite, T2_Convo_Interest_composite, T2_Song_Interest_composite, T2_Finals_Interest_composite, T2_Joke_Interest_composite, T2_Photo_Interest_composite, T2_FB_Interest_composite)
cronbach.alpha(interestcomp.items, na.rm = TRUE)
cronbach.alpha(curious.items, na.rm = TRUE)
cronbach.alpha(interestcomp.items, na.rm = TRUE)
